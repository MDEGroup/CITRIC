module B2C;

create OUT : C from IN : B;

helper def: counter : Integer = 1;

rule D2H {
	from
		s : B!D
	to
		t : C!H (name <- t.oclType().name.toString().toLower() + '_' + thisModule.counter)
	do {
		thisModule.counter <- thisModule.counter + 1;
	}
}

rule E2I {
	from
		s : B!E
	to
		t : C!I (name <- t.oclType().name.toString().toLower() + '_' + thisModule.counter)
	do {
		thisModule.counter <- thisModule.counter + 1;
	}
}

rule G2M {
	from
		s : B!G
	to
		t : C!M (name <- t.oclType().name.toString().toLower() + '_' + thisModule.counter)
	do {
		thisModule.counter <- thisModule.counter + 1;
	}
}