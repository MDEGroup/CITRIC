module A2B;

create OUT : B from IN : A;

helper def: counter : Integer = 1;

rule A2D {
	from
		s : A!A
	to
		t : B!D (name <- t.oclType().name.toString().toLower() + '_' + thisModule.counter)
	do {
		thisModule.counter <- thisModule.counter + 1;
	}
}

rule C2F_G {
	from
		s : A!C
	to
		t_1 : B!F (name <- t_1.oclType().name.toString().toLower() + '_' + thisModule.counter),
		t_2 : B!G (name <- t_2.oclType().name.toString().toLower() + '_' + thisModule.counter)
	do {
		thisModule.counter <- thisModule.counter + 1;
	}
	
}